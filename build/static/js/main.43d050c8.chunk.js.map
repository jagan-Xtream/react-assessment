{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","emailRegex","useRef","useState","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","username","setUsername","email","setEmail","password","setPassword","details","setDetails","testRegex","str","current","test","handleChange","e","preventDefault","stopPropagation","element","target","value","id","handleBlur","isFormInValid","className","onSubmit","alert","name","for","type","onBlur","onChange","class","disabled","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43d050c8.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const emailRegex = useRef(/\\S+@\\S+\\.\\S+/);\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [details, setDetails] = useState([]);\n\n  const testRegex = (str) => emailRegex.current.test(str);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const element = e.target;\n    const value = element.value;\n    switch (element.id) {\n      case \"username\":\n        setUsername(value);\n        setUsernameError(\"\");\n        break;\n      case \"email\":\n        setEmail(value);\n        if (testRegex(value)) setEmailError(\"\");\n        break;\n      case \"password\":\n        setPassword(value);\n        setPasswordError(\"\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleBlur = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const element = e.target;\n    const value = element.value;\n    switch (element.id) {\n      case \"username\":\n        if (!value) setUsernameError(\"*username cannot be empty\");\n        else setUsernameError(\"\");\n        break;\n      case \"email\":\n        if (!value) setEmailError(\"*email cannot be empty\");\n        else {\n          if (!testRegex(value)) setEmailError(\"*Not a valid Email\");\n          else setEmailError(\"\");\n        }\n        break;\n      case \"password\":\n        if (!value) setPasswordError(\"*password cannot be empty\");\n        else setPasswordError(\"\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isFormInValid = () =>\n    emailError ||\n    usernameError ||\n    passwordError ||\n    !username ||\n    !email ||\n    !password;\n\n  const resetForm = () => {\n    setUsername(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (isFormInValid()) alert(\"Enter Valid Details\");\n    else {\n      setDetails([...details, { name: username, email: email }]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"login\">\n          <h1> Log In </h1>\n          \n          <label for=\"username\"  >\n            <p> <b>USER NAME</b> </p>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={username}\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n            {!!usernameError && <p class=\"error\"> {usernameError} </p>}\n          </label>\n          <label for=\"email\">\n            <p> <b>EMAIL ID</b> </p>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              value={email}\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n            {!!emailError && <p class=\"error\"> {emailError} </p>}\n          </label>\n          <label for=\"password\">\n            <p><b>PASSWORD</b> </p>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={password}\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n            {!!passwordError && <p class=\"error\"> {passwordError} </p>}\n          </label>\n          \n          <div>\n            <button type=\"submit\" disabled={isFormInValid()} className=\"sub\">\n              {\" \"}\n              Submit{\" \"}\n            </button>\n          </div>\n        </div>\n      </form>\n      {details.length > 0 && (\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th> name </th>\n              <th> email </th>\n            </tr>\n          </thead>\n          <tbody>\n            {details.map(({ name, email }) => (\n              <tr>\n                {\" \"}\n                <td> {name} </td> <td> {email} </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}